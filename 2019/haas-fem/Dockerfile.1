# We will use Ubuntu for our image
FROM ubuntu:latest

# Updating Ubuntu packages
RUN apt-get update --fix-missing && yes|apt-get upgrade

#Update again
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils software-properties-common
RUN apt-get update -y  && apt-get dist-upgrade -y
RUN apt-get update -y  && apt-get upgrade -y
RUN apt -y install build-essential libssl-dev libffi-dev lib32ncurses5-dev zip  unzip libsuitesparse-dev python3-dev python3-pip

# gtar was used by pandoc so we need this
RUN ln -s /bin/tar /bin/gtar

# Adding wget and bzip2
RUN apt-get install -y wget bzip2


# Anaconda installing
RUN cd /opt/ && \
    wget https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh &&  \
    bash Anaconda3-5.3.0-Linux-x86_64.sh -b -p /opt/conda  && \
    rm Anaconda3-5.3.0-Linux-x86_64.sh
#
RUN /opt/conda/bin/pip install PyHamcrest
RUN /opt/conda/bin/pip install --upgrade pip
RUN /opt/conda/bin/pip install -U pip six numpy wheel mock
RUN /opt/conda/bin/pip install -U keras_applications==1.0.6 --no-deps
RUN /opt/conda/bin/pip install -U keras_preprocessing==1.0.5 --no-deps

# Set path to conda
#ENV export PATH=/opt/conda/bin:$PATH
ENV PATH=/opt/conda/bin:$PATH
ENV export PREFIX=/opt/conda
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && /opt/conda/bin/python get-pip.py


# Updating Anaconda packages
RUN /opt/conda/bin/conda update conda && \
    /opt/conda/bin/conda update -n base conda && \
    /opt/conda/bin/conda update --all  
#    /opt/conda/bin/conda update anaconda && \


#Install juputer
RUN  /opt/conda/bin/pip install jupyter jupyterlab notebook

#Install R
RUN /opt/conda/bin/conda install -c r r-essentials r-irkernel 

#Install dijitso
RUN /opt/conda/bin/conda install -c conda-forge suitesparse
RUN /opt/conda/bin/conda install -c conda-forge fenics
RUN apt-get -y  install gcc g++ gfortran
RUN /opt/conda/bin/pip install --upgrade datascience okpy autopep8 isort nbgitpuller oauthenticator pandas matplotlib okpy  numpy scipy nbinteract pandas  matplotlib 


RUN /opt/conda/bin/conda install -c conda-forge/label/gcc7 mshr  git

#RUN /opt/conda/bin/pip install --upgrade tensorflow
RUN /opt/conda/bin/pip install --upgrade https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-0.10.0-py3-none-any.whl

#RUN /opt/conda/bin/conda create -n tensorflow_env tensorflow

RUN /opt/conda/bin/pip install git+https://bitbucket.org/dolfin-adjoint/pyadjoint.git@2018.1.0

RUN /opt/conda/bin/pip install oauthenticator
RUN apt-get -y install libcgal-dev
RUN apt-get -y install libcgal-demo
RUN /opt/conda/bin/conda install -c salilab cgal




######################################################################################################
# Add user ubuntu with no password 
RUN adduser --disabled-password --gecos '' jovyan

# Add single user start up script
ADD jupyterhub-singleuser /usr/local/bin
ADD start-notebook.sh   /usr/local/bin
ADD start-singleuser.sh /usr/local/bin
ADD start.sh /usr/local/bin
RUN chmod +x /usr/local/bin/*
ENV export PATH=/opt/conda/bin:/usr/local/bin:$PATH
ADD install_libraries.R /tmp
RUN R -f /tmp/install_libraries.R

USER jovyan
WORKDIR /home/jovyan/
RUN chmod a+rwx /home/jovyan/

# Configuring access to Jupyter
RUN jupyter notebook --generate-config 

# Jupyter listens port: 8888
EXPOSE 8888

# Run Jupyter notebook as Docker main process
CMD ["jupyter", "notebook", "--allow-root", "--notebook-dir=/home/jovyan", "--ip='0.0.0.0'","--port=8888", "--no-browser"]
